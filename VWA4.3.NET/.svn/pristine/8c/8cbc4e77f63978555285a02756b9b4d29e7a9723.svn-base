//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace VWA4.com.leanpath.activate {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UpdateManagerSoap", Namespace="http://tempuri.org/")]
    public partial class UpdateManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUpdateTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatesBySeriesIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckForUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUpdateByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallUpdatesInSeriesByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback HotfixUpdatesInSeriesByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMessageUpdatesInSeriesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllHotfixUpdatesInSeriesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUpdateSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateSeriesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUpdateSeriesWithUpdateIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUpdateSeriesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUpdateSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllVersionsForUpdateSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVersionByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppendUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllUploadsByUpdateIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelAllUploadsByUpdateIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateFileByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesForUpdateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UpdateManager() {
            this.Url = global::VWA4.Properties.Settings.Default.VWA4_com_leanpath_activate_UpdateManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUpdateTypesCompletedEventHandler GetUpdateTypesCompleted;
        
        /// <remarks/>
        public event SaveUpdateCompletedEventHandler SaveUpdateCompleted;
        
        /// <remarks/>
        public event GetUpdateByIdCompletedEventHandler GetUpdateByIdCompleted;
        
        /// <remarks/>
        public event GetAllUpdatesCompletedEventHandler GetAllUpdatesCompleted;
        
        /// <remarks/>
        public event GetUpdatesBySeriesIdCompletedEventHandler GetUpdatesBySeriesIdCompleted;
        
        /// <remarks/>
        public event CompleteUpdateCompletedEventHandler CompleteUpdateCompleted;
        
        /// <remarks/>
        public event CheckForUpdatesCompletedEventHandler CheckForUpdatesCompleted;
        
        /// <remarks/>
        public event GetUpdateCompletedEventHandler GetUpdateCompleted;
        
        /// <remarks/>
        public event GetUpdateSeriesCompletedEventHandler GetUpdateSeriesCompleted;
        
        /// <remarks/>
        public event DeleteUpdateByIdCompletedEventHandler DeleteUpdateByIdCompleted;
        
        /// <remarks/>
        public event InstallUpdatesInSeriesByIdsCompletedEventHandler InstallUpdatesInSeriesByIdsCompleted;
        
        /// <remarks/>
        public event HotfixUpdatesInSeriesByIdsCompletedEventHandler HotfixUpdatesInSeriesByIdsCompleted;
        
        /// <remarks/>
        public event GetAllMessageUpdatesInSeriesByIdCompletedEventHandler GetAllMessageUpdatesInSeriesByIdCompleted;
        
        /// <remarks/>
        public event GetAllHotfixUpdatesInSeriesByIdCompletedEventHandler GetAllHotfixUpdatesInSeriesByIdCompleted;
        
        /// <remarks/>
        public event GetAllUpdateSeriesCompletedEventHandler GetAllUpdateSeriesCompleted;
        
        /// <remarks/>
        public event GetUpdateSeriesByIdCompletedEventHandler GetUpdateSeriesByIdCompleted;
        
        /// <remarks/>
        public event SaveUpdateSeriesWithUpdateIdsCompletedEventHandler SaveUpdateSeriesWithUpdateIdsCompleted;
        
        /// <remarks/>
        public event DeleteUpdateSeriesByIdCompletedEventHandler DeleteUpdateSeriesByIdCompleted;
        
        /// <remarks/>
        public event SaveUpdateSeriesCompletedEventHandler SaveUpdateSeriesCompleted;
        
        /// <remarks/>
        public event GetAllVersionsForUpdateSeriesCompletedEventHandler GetAllVersionsForUpdateSeriesCompleted;
        
        /// <remarks/>
        public event GetAllVersionsCompletedEventHandler GetAllVersionsCompleted;
        
        /// <remarks/>
        public event SaveVersionCompletedEventHandler SaveVersionCompleted;
        
        /// <remarks/>
        public event DeleteVersionByIdCompletedEventHandler DeleteVersionByIdCompleted;
        
        /// <remarks/>
        public event StartDownloadCompletedEventHandler StartDownloadCompleted;
        
        /// <remarks/>
        public event DownloadCompletedEventHandler DownloadCompleted;
        
        /// <remarks/>
        public event StartUploadCompletedEventHandler StartUploadCompleted;
        
        /// <remarks/>
        public event AppendUploadCompletedEventHandler AppendUploadCompleted;
        
        /// <remarks/>
        public event FinishUploadCompletedEventHandler FinishUploadCompleted;
        
        /// <remarks/>
        public event DeleteAllUploadsByUpdateIdCompletedEventHandler DeleteAllUploadsByUpdateIdCompleted;
        
        /// <remarks/>
        public event CancelAllUploadsByUpdateIdCompletedEventHandler CancelAllUploadsByUpdateIdCompleted;
        
        /// <remarks/>
        public event DeleteUploadCompletedEventHandler DeleteUploadCompleted;
        
        /// <remarks/>
        public event CancelUploadCompletedEventHandler CancelUploadCompleted;
        
        /// <remarks/>
        public event GetUpdateFileByIdCompletedEventHandler GetUpdateFileByIdCompleted;
        
        /// <remarks/>
        public event GetFilesForUpdateCompletedEventHandler GetFilesForUpdateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateType[] GetUpdateTypes() {
            object[] results = this.Invoke("GetUpdateTypes", new object[0]);
            return ((UpdateType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateTypesAsync() {
            this.GetUpdateTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetUpdateTypesAsync(object userState) {
            if ((this.GetUpdateTypesOperationCompleted == null)) {
                this.GetUpdateTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateTypesOperationCompleted);
            }
            this.InvokeAsync("GetUpdateTypes", new object[0], this.GetUpdateTypesOperationCompleted, userState);
        }
        
        private void OnGetUpdateTypesOperationCompleted(object arg) {
            if ((this.GetUpdateTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateTypesCompleted(this, new GetUpdateTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Update SaveUpdate(Update u) {
            object[] results = this.Invoke("SaveUpdate", new object[] {
                        u});
            return ((Update)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUpdateAsync(Update u) {
            this.SaveUpdateAsync(u, null);
        }
        
        /// <remarks/>
        public void SaveUpdateAsync(Update u, object userState) {
            if ((this.SaveUpdateOperationCompleted == null)) {
                this.SaveUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUpdateOperationCompleted);
            }
            this.InvokeAsync("SaveUpdate", new object[] {
                        u}, this.SaveUpdateOperationCompleted, userState);
        }
        
        private void OnSaveUpdateOperationCompleted(object arg) {
            if ((this.SaveUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUpdateCompleted(this, new SaveUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Update GetUpdateById(System.Guid id) {
            object[] results = this.Invoke("GetUpdateById", new object[] {
                        id});
            return ((Update)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateByIdAsync(System.Guid id) {
            this.GetUpdateByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUpdateByIdAsync(System.Guid id, object userState) {
            if ((this.GetUpdateByIdOperationCompleted == null)) {
                this.GetUpdateByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateByIdOperationCompleted);
            }
            this.InvokeAsync("GetUpdateById", new object[] {
                        id}, this.GetUpdateByIdOperationCompleted, userState);
        }
        
        private void OnGetUpdateByIdOperationCompleted(object arg) {
            if ((this.GetUpdateByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateByIdCompleted(this, new GetUpdateByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUpdates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Update[] GetAllUpdates() {
            object[] results = this.Invoke("GetAllUpdates", new object[0]);
            return ((Update[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUpdatesAsync() {
            this.GetAllUpdatesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUpdatesAsync(object userState) {
            if ((this.GetAllUpdatesOperationCompleted == null)) {
                this.GetAllUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetAllUpdates", new object[0], this.GetAllUpdatesOperationCompleted, userState);
        }
        
        private void OnGetAllUpdatesOperationCompleted(object arg) {
            if ((this.GetAllUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUpdatesCompleted(this, new GetAllUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdatesBySeriesId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Update[] GetUpdatesBySeriesId(System.Guid id) {
            object[] results = this.Invoke("GetUpdatesBySeriesId", new object[] {
                        id});
            return ((Update[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatesBySeriesIdAsync(System.Guid id) {
            this.GetUpdatesBySeriesIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUpdatesBySeriesIdAsync(System.Guid id, object userState) {
            if ((this.GetUpdatesBySeriesIdOperationCompleted == null)) {
                this.GetUpdatesBySeriesIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatesBySeriesIdOperationCompleted);
            }
            this.InvokeAsync("GetUpdatesBySeriesId", new object[] {
                        id}, this.GetUpdatesBySeriesIdOperationCompleted, userState);
        }
        
        private void OnGetUpdatesBySeriesIdOperationCompleted(object arg) {
            if ((this.GetUpdatesBySeriesIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatesBySeriesIdCompleted(this, new GetUpdatesBySeriesIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompleteUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CompleteUpdate(System.Guid applicationid, System.Guid updateId) {
            this.Invoke("CompleteUpdate", new object[] {
                        applicationid,
                        updateId});
        }
        
        /// <remarks/>
        public void CompleteUpdateAsync(System.Guid applicationid, System.Guid updateId) {
            this.CompleteUpdateAsync(applicationid, updateId, null);
        }
        
        /// <remarks/>
        public void CompleteUpdateAsync(System.Guid applicationid, System.Guid updateId, object userState) {
            if ((this.CompleteUpdateOperationCompleted == null)) {
                this.CompleteUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteUpdateOperationCompleted);
            }
            this.InvokeAsync("CompleteUpdate", new object[] {
                        applicationid,
                        updateId}, this.CompleteUpdateOperationCompleted, userState);
        }
        
        private void OnCompleteUpdateOperationCompleted(object arg) {
            if ((this.CompleteUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckForUpdates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid[] CheckForUpdates(string version, System.Guid applicationId) {
            object[] results = this.Invoke("CheckForUpdates", new object[] {
                        version,
                        applicationId});
            return ((System.Guid[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckForUpdatesAsync(string version, System.Guid applicationId) {
            this.CheckForUpdatesAsync(version, applicationId, null);
        }
        
        /// <remarks/>
        public void CheckForUpdatesAsync(string version, System.Guid applicationId, object userState) {
            if ((this.CheckForUpdatesOperationCompleted == null)) {
                this.CheckForUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckForUpdatesOperationCompleted);
            }
            this.InvokeAsync("CheckForUpdates", new object[] {
                        version,
                        applicationId}, this.CheckForUpdatesOperationCompleted, userState);
        }
        
        private void OnCheckForUpdatesOperationCompleted(object arg) {
            if ((this.CheckForUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckForUpdatesCompleted(this, new CheckForUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Update GetUpdate(System.Guid id) {
            object[] results = this.Invoke("GetUpdate", new object[] {
                        id});
            return ((Update)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateAsync(System.Guid id) {
            this.GetUpdateAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUpdateAsync(System.Guid id, object userState) {
            if ((this.GetUpdateOperationCompleted == null)) {
                this.GetUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateOperationCompleted);
            }
            this.InvokeAsync("GetUpdate", new object[] {
                        id}, this.GetUpdateOperationCompleted, userState);
        }
        
        private void OnGetUpdateOperationCompleted(object arg) {
            if ((this.GetUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateCompleted(this, new GetUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateSeries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateSeries GetUpdateSeries(System.Guid id) {
            object[] results = this.Invoke("GetUpdateSeries", new object[] {
                        id});
            return ((UpdateSeries)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateSeriesAsync(System.Guid id) {
            this.GetUpdateSeriesAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUpdateSeriesAsync(System.Guid id, object userState) {
            if ((this.GetUpdateSeriesOperationCompleted == null)) {
                this.GetUpdateSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateSeriesOperationCompleted);
            }
            this.InvokeAsync("GetUpdateSeries", new object[] {
                        id}, this.GetUpdateSeriesOperationCompleted, userState);
        }
        
        private void OnGetUpdateSeriesOperationCompleted(object arg) {
            if ((this.GetUpdateSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateSeriesCompleted(this, new GetUpdateSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUpdateById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUpdateById(System.Guid id) {
            this.Invoke("DeleteUpdateById", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteUpdateByIdAsync(System.Guid id) {
            this.DeleteUpdateByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteUpdateByIdAsync(System.Guid id, object userState) {
            if ((this.DeleteUpdateByIdOperationCompleted == null)) {
                this.DeleteUpdateByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUpdateByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteUpdateById", new object[] {
                        id}, this.DeleteUpdateByIdOperationCompleted, userState);
        }
        
        private void OnDeleteUpdateByIdOperationCompleted(object arg) {
            if ((this.DeleteUpdateByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUpdateByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InstallUpdatesInSeriesByIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InstallUpdatesInSeriesByIds(System.Guid[] ids) {
            object[] results = this.Invoke("InstallUpdatesInSeriesByIds", new object[] {
                        ids});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InstallUpdatesInSeriesByIdsAsync(System.Guid[] ids) {
            this.InstallUpdatesInSeriesByIdsAsync(ids, null);
        }
        
        /// <remarks/>
        public void InstallUpdatesInSeriesByIdsAsync(System.Guid[] ids, object userState) {
            if ((this.InstallUpdatesInSeriesByIdsOperationCompleted == null)) {
                this.InstallUpdatesInSeriesByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallUpdatesInSeriesByIdsOperationCompleted);
            }
            this.InvokeAsync("InstallUpdatesInSeriesByIds", new object[] {
                        ids}, this.InstallUpdatesInSeriesByIdsOperationCompleted, userState);
        }
        
        private void OnInstallUpdatesInSeriesByIdsOperationCompleted(object arg) {
            if ((this.InstallUpdatesInSeriesByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallUpdatesInSeriesByIdsCompleted(this, new InstallUpdatesInSeriesByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HotfixUpdatesInSeriesByIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HotfixUpdatesInSeriesByIds(System.Guid[] ids) {
            object[] results = this.Invoke("HotfixUpdatesInSeriesByIds", new object[] {
                        ids});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HotfixUpdatesInSeriesByIdsAsync(System.Guid[] ids) {
            this.HotfixUpdatesInSeriesByIdsAsync(ids, null);
        }
        
        /// <remarks/>
        public void HotfixUpdatesInSeriesByIdsAsync(System.Guid[] ids, object userState) {
            if ((this.HotfixUpdatesInSeriesByIdsOperationCompleted == null)) {
                this.HotfixUpdatesInSeriesByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHotfixUpdatesInSeriesByIdsOperationCompleted);
            }
            this.InvokeAsync("HotfixUpdatesInSeriesByIds", new object[] {
                        ids}, this.HotfixUpdatesInSeriesByIdsOperationCompleted, userState);
        }
        
        private void OnHotfixUpdatesInSeriesByIdsOperationCompleted(object arg) {
            if ((this.HotfixUpdatesInSeriesByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HotfixUpdatesInSeriesByIdsCompleted(this, new HotfixUpdatesInSeriesByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMessageUpdatesInSeriesById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Update[] GetAllMessageUpdatesInSeriesById(System.Guid id) {
            object[] results = this.Invoke("GetAllMessageUpdatesInSeriesById", new object[] {
                        id});
            return ((Update[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessageUpdatesInSeriesByIdAsync(System.Guid id) {
            this.GetAllMessageUpdatesInSeriesByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAllMessageUpdatesInSeriesByIdAsync(System.Guid id, object userState) {
            if ((this.GetAllMessageUpdatesInSeriesByIdOperationCompleted == null)) {
                this.GetAllMessageUpdatesInSeriesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessageUpdatesInSeriesByIdOperationCompleted);
            }
            this.InvokeAsync("GetAllMessageUpdatesInSeriesById", new object[] {
                        id}, this.GetAllMessageUpdatesInSeriesByIdOperationCompleted, userState);
        }
        
        private void OnGetAllMessageUpdatesInSeriesByIdOperationCompleted(object arg) {
            if ((this.GetAllMessageUpdatesInSeriesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessageUpdatesInSeriesByIdCompleted(this, new GetAllMessageUpdatesInSeriesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllHotfixUpdatesInSeriesById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Update[] GetAllHotfixUpdatesInSeriesById(System.Guid id) {
            object[] results = this.Invoke("GetAllHotfixUpdatesInSeriesById", new object[] {
                        id});
            return ((Update[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllHotfixUpdatesInSeriesByIdAsync(System.Guid id) {
            this.GetAllHotfixUpdatesInSeriesByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAllHotfixUpdatesInSeriesByIdAsync(System.Guid id, object userState) {
            if ((this.GetAllHotfixUpdatesInSeriesByIdOperationCompleted == null)) {
                this.GetAllHotfixUpdatesInSeriesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllHotfixUpdatesInSeriesByIdOperationCompleted);
            }
            this.InvokeAsync("GetAllHotfixUpdatesInSeriesById", new object[] {
                        id}, this.GetAllHotfixUpdatesInSeriesByIdOperationCompleted, userState);
        }
        
        private void OnGetAllHotfixUpdatesInSeriesByIdOperationCompleted(object arg) {
            if ((this.GetAllHotfixUpdatesInSeriesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllHotfixUpdatesInSeriesByIdCompleted(this, new GetAllHotfixUpdatesInSeriesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUpdateSeries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateSeries[] GetAllUpdateSeries() {
            object[] results = this.Invoke("GetAllUpdateSeries", new object[0]);
            return ((UpdateSeries[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUpdateSeriesAsync() {
            this.GetAllUpdateSeriesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUpdateSeriesAsync(object userState) {
            if ((this.GetAllUpdateSeriesOperationCompleted == null)) {
                this.GetAllUpdateSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUpdateSeriesOperationCompleted);
            }
            this.InvokeAsync("GetAllUpdateSeries", new object[0], this.GetAllUpdateSeriesOperationCompleted, userState);
        }
        
        private void OnGetAllUpdateSeriesOperationCompleted(object arg) {
            if ((this.GetAllUpdateSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUpdateSeriesCompleted(this, new GetAllUpdateSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateSeriesById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateSeries GetUpdateSeriesById(System.Guid id) {
            object[] results = this.Invoke("GetUpdateSeriesById", new object[] {
                        id});
            return ((UpdateSeries)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateSeriesByIdAsync(System.Guid id) {
            this.GetUpdateSeriesByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUpdateSeriesByIdAsync(System.Guid id, object userState) {
            if ((this.GetUpdateSeriesByIdOperationCompleted == null)) {
                this.GetUpdateSeriesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateSeriesByIdOperationCompleted);
            }
            this.InvokeAsync("GetUpdateSeriesById", new object[] {
                        id}, this.GetUpdateSeriesByIdOperationCompleted, userState);
        }
        
        private void OnGetUpdateSeriesByIdOperationCompleted(object arg) {
            if ((this.GetUpdateSeriesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateSeriesByIdCompleted(this, new GetUpdateSeriesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUpdateSeriesWithUpdateIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateSeries SaveUpdateSeriesWithUpdateIds(UpdateSeries us, System.Guid[] updateIds) {
            object[] results = this.Invoke("SaveUpdateSeriesWithUpdateIds", new object[] {
                        us,
                        updateIds});
            return ((UpdateSeries)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUpdateSeriesWithUpdateIdsAsync(UpdateSeries us, System.Guid[] updateIds) {
            this.SaveUpdateSeriesWithUpdateIdsAsync(us, updateIds, null);
        }
        
        /// <remarks/>
        public void SaveUpdateSeriesWithUpdateIdsAsync(UpdateSeries us, System.Guid[] updateIds, object userState) {
            if ((this.SaveUpdateSeriesWithUpdateIdsOperationCompleted == null)) {
                this.SaveUpdateSeriesWithUpdateIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUpdateSeriesWithUpdateIdsOperationCompleted);
            }
            this.InvokeAsync("SaveUpdateSeriesWithUpdateIds", new object[] {
                        us,
                        updateIds}, this.SaveUpdateSeriesWithUpdateIdsOperationCompleted, userState);
        }
        
        private void OnSaveUpdateSeriesWithUpdateIdsOperationCompleted(object arg) {
            if ((this.SaveUpdateSeriesWithUpdateIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUpdateSeriesWithUpdateIdsCompleted(this, new SaveUpdateSeriesWithUpdateIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUpdateSeriesById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUpdateSeriesById(System.Guid id) {
            this.Invoke("DeleteUpdateSeriesById", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteUpdateSeriesByIdAsync(System.Guid id) {
            this.DeleteUpdateSeriesByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteUpdateSeriesByIdAsync(System.Guid id, object userState) {
            if ((this.DeleteUpdateSeriesByIdOperationCompleted == null)) {
                this.DeleteUpdateSeriesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUpdateSeriesByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteUpdateSeriesById", new object[] {
                        id}, this.DeleteUpdateSeriesByIdOperationCompleted, userState);
        }
        
        private void OnDeleteUpdateSeriesByIdOperationCompleted(object arg) {
            if ((this.DeleteUpdateSeriesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUpdateSeriesByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUpdateSeries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateSeries SaveUpdateSeries(UpdateSeries us) {
            object[] results = this.Invoke("SaveUpdateSeries", new object[] {
                        us});
            return ((UpdateSeries)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUpdateSeriesAsync(UpdateSeries us) {
            this.SaveUpdateSeriesAsync(us, null);
        }
        
        /// <remarks/>
        public void SaveUpdateSeriesAsync(UpdateSeries us, object userState) {
            if ((this.SaveUpdateSeriesOperationCompleted == null)) {
                this.SaveUpdateSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUpdateSeriesOperationCompleted);
            }
            this.InvokeAsync("SaveUpdateSeries", new object[] {
                        us}, this.SaveUpdateSeriesOperationCompleted, userState);
        }
        
        private void OnSaveUpdateSeriesOperationCompleted(object arg) {
            if ((this.SaveUpdateSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUpdateSeriesCompleted(this, new SaveUpdateSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllVersionsForUpdateSeries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Version[] GetAllVersionsForUpdateSeries(System.Guid id) {
            object[] results = this.Invoke("GetAllVersionsForUpdateSeries", new object[] {
                        id});
            return ((Version[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVersionsForUpdateSeriesAsync(System.Guid id) {
            this.GetAllVersionsForUpdateSeriesAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAllVersionsForUpdateSeriesAsync(System.Guid id, object userState) {
            if ((this.GetAllVersionsForUpdateSeriesOperationCompleted == null)) {
                this.GetAllVersionsForUpdateSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVersionsForUpdateSeriesOperationCompleted);
            }
            this.InvokeAsync("GetAllVersionsForUpdateSeries", new object[] {
                        id}, this.GetAllVersionsForUpdateSeriesOperationCompleted, userState);
        }
        
        private void OnGetAllVersionsForUpdateSeriesOperationCompleted(object arg) {
            if ((this.GetAllVersionsForUpdateSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVersionsForUpdateSeriesCompleted(this, new GetAllVersionsForUpdateSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllVersions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Version[] GetAllVersions() {
            object[] results = this.Invoke("GetAllVersions", new object[0]);
            return ((Version[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVersionsAsync() {
            this.GetAllVersionsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllVersionsAsync(object userState) {
            if ((this.GetAllVersionsOperationCompleted == null)) {
                this.GetAllVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVersionsOperationCompleted);
            }
            this.InvokeAsync("GetAllVersions", new object[0], this.GetAllVersionsOperationCompleted, userState);
        }
        
        private void OnGetAllVersionsOperationCompleted(object arg) {
            if ((this.GetAllVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVersionsCompleted(this, new GetAllVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveVersion(Version v) {
            object[] results = this.Invoke("SaveVersion", new object[] {
                        v});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveVersionAsync(Version v) {
            this.SaveVersionAsync(v, null);
        }
        
        /// <remarks/>
        public void SaveVersionAsync(Version v, object userState) {
            if ((this.SaveVersionOperationCompleted == null)) {
                this.SaveVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveVersionOperationCompleted);
            }
            this.InvokeAsync("SaveVersion", new object[] {
                        v}, this.SaveVersionOperationCompleted, userState);
        }
        
        private void OnSaveVersionOperationCompleted(object arg) {
            if ((this.SaveVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveVersionCompleted(this, new SaveVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteVersionById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteVersionById(System.Guid id) {
            this.Invoke("DeleteVersionById", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteVersionByIdAsync(System.Guid id) {
            this.DeleteVersionByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteVersionByIdAsync(System.Guid id, object userState) {
            if ((this.DeleteVersionByIdOperationCompleted == null)) {
                this.DeleteVersionByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVersionByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteVersionById", new object[] {
                        id}, this.DeleteVersionByIdOperationCompleted, userState);
        }
        
        private void OnDeleteVersionByIdOperationCompleted(object arg) {
            if ((this.DeleteVersionByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVersionByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long StartDownload(System.Guid fileId) {
            object[] results = this.Invoke("StartDownload", new object[] {
                        fileId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void StartDownloadAsync(System.Guid fileId) {
            this.StartDownloadAsync(fileId, null);
        }
        
        /// <remarks/>
        public void StartDownloadAsync(System.Guid fileId, object userState) {
            if ((this.StartDownloadOperationCompleted == null)) {
                this.StartDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartDownloadOperationCompleted);
            }
            this.InvokeAsync("StartDownload", new object[] {
                        fileId}, this.StartDownloadOperationCompleted, userState);
        }
        
        private void OnStartDownloadOperationCompleted(object arg) {
            if ((this.StartDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartDownloadCompleted(this, new StartDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Download", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Download(System.Guid fileId, int read) {
            object[] results = this.Invoke("Download", new object[] {
                        fileId,
                        read});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadAsync(System.Guid fileId, int read) {
            this.DownloadAsync(fileId, read, null);
        }
        
        /// <remarks/>
        public void DownloadAsync(System.Guid fileId, int read, object userState) {
            if ((this.DownloadOperationCompleted == null)) {
                this.DownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadOperationCompleted);
            }
            this.InvokeAsync("Download", new object[] {
                        fileId,
                        read}, this.DownloadOperationCompleted, userState);
        }
        
        private void OnDownloadOperationCompleted(object arg) {
            if ((this.DownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadCompleted(this, new DownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid StartUpload(System.Guid updateId, string fileName, string installPath) {
            object[] results = this.Invoke("StartUpload", new object[] {
                        updateId,
                        fileName,
                        installPath});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void StartUploadAsync(System.Guid updateId, string fileName, string installPath) {
            this.StartUploadAsync(updateId, fileName, installPath, null);
        }
        
        /// <remarks/>
        public void StartUploadAsync(System.Guid updateId, string fileName, string installPath, object userState) {
            if ((this.StartUploadOperationCompleted == null)) {
                this.StartUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartUploadOperationCompleted);
            }
            this.InvokeAsync("StartUpload", new object[] {
                        updateId,
                        fileName,
                        installPath}, this.StartUploadOperationCompleted, userState);
        }
        
        private void OnStartUploadOperationCompleted(object arg) {
            if ((this.StartUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartUploadCompleted(this, new StartUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AppendUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AppendUpload(System.Guid fileId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes) {
            object[] results = this.Invoke("AppendUpload", new object[] {
                        fileId,
                        bytes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AppendUploadAsync(System.Guid fileId, byte[] bytes) {
            this.AppendUploadAsync(fileId, bytes, null);
        }
        
        /// <remarks/>
        public void AppendUploadAsync(System.Guid fileId, byte[] bytes, object userState) {
            if ((this.AppendUploadOperationCompleted == null)) {
                this.AppendUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppendUploadOperationCompleted);
            }
            this.InvokeAsync("AppendUpload", new object[] {
                        fileId,
                        bytes}, this.AppendUploadOperationCompleted, userState);
        }
        
        private void OnAppendUploadOperationCompleted(object arg) {
            if ((this.AppendUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppendUploadCompleted(this, new AppendUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FinishUpload(System.Guid fileId) {
            object[] results = this.Invoke("FinishUpload", new object[] {
                        fileId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FinishUploadAsync(System.Guid fileId) {
            this.FinishUploadAsync(fileId, null);
        }
        
        /// <remarks/>
        public void FinishUploadAsync(System.Guid fileId, object userState) {
            if ((this.FinishUploadOperationCompleted == null)) {
                this.FinishUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishUploadOperationCompleted);
            }
            this.InvokeAsync("FinishUpload", new object[] {
                        fileId}, this.FinishUploadOperationCompleted, userState);
        }
        
        private void OnFinishUploadOperationCompleted(object arg) {
            if ((this.FinishUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishUploadCompleted(this, new FinishUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAllUploadsByUpdateId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAllUploadsByUpdateId(System.Guid updateId) {
            this.Invoke("DeleteAllUploadsByUpdateId", new object[] {
                        updateId});
        }
        
        /// <remarks/>
        public void DeleteAllUploadsByUpdateIdAsync(System.Guid updateId) {
            this.DeleteAllUploadsByUpdateIdAsync(updateId, null);
        }
        
        /// <remarks/>
        public void DeleteAllUploadsByUpdateIdAsync(System.Guid updateId, object userState) {
            if ((this.DeleteAllUploadsByUpdateIdOperationCompleted == null)) {
                this.DeleteAllUploadsByUpdateIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllUploadsByUpdateIdOperationCompleted);
            }
            this.InvokeAsync("DeleteAllUploadsByUpdateId", new object[] {
                        updateId}, this.DeleteAllUploadsByUpdateIdOperationCompleted, userState);
        }
        
        private void OnDeleteAllUploadsByUpdateIdOperationCompleted(object arg) {
            if ((this.DeleteAllUploadsByUpdateIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllUploadsByUpdateIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelAllUploadsByUpdateId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelAllUploadsByUpdateId(System.Guid updateId) {
            this.Invoke("CancelAllUploadsByUpdateId", new object[] {
                        updateId});
        }
        
        /// <remarks/>
        public void CancelAllUploadsByUpdateIdAsync(System.Guid updateId) {
            this.CancelAllUploadsByUpdateIdAsync(updateId, null);
        }
        
        /// <remarks/>
        public void CancelAllUploadsByUpdateIdAsync(System.Guid updateId, object userState) {
            if ((this.CancelAllUploadsByUpdateIdOperationCompleted == null)) {
                this.CancelAllUploadsByUpdateIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelAllUploadsByUpdateIdOperationCompleted);
            }
            this.InvokeAsync("CancelAllUploadsByUpdateId", new object[] {
                        updateId}, this.CancelAllUploadsByUpdateIdOperationCompleted, userState);
        }
        
        private void OnCancelAllUploadsByUpdateIdOperationCompleted(object arg) {
            if ((this.CancelAllUploadsByUpdateIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelAllUploadsByUpdateIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUpload(System.Guid fileId) {
            this.Invoke("DeleteUpload", new object[] {
                        fileId});
        }
        
        /// <remarks/>
        public void DeleteUploadAsync(System.Guid fileId) {
            this.DeleteUploadAsync(fileId, null);
        }
        
        /// <remarks/>
        public void DeleteUploadAsync(System.Guid fileId, object userState) {
            if ((this.DeleteUploadOperationCompleted == null)) {
                this.DeleteUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUploadOperationCompleted);
            }
            this.InvokeAsync("DeleteUpload", new object[] {
                        fileId}, this.DeleteUploadOperationCompleted, userState);
        }
        
        private void OnDeleteUploadOperationCompleted(object arg) {
            if ((this.DeleteUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelUpload(System.Guid fileId) {
            this.Invoke("CancelUpload", new object[] {
                        fileId});
        }
        
        /// <remarks/>
        public void CancelUploadAsync(System.Guid fileId) {
            this.CancelUploadAsync(fileId, null);
        }
        
        /// <remarks/>
        public void CancelUploadAsync(System.Guid fileId, object userState) {
            if ((this.CancelUploadOperationCompleted == null)) {
                this.CancelUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelUploadOperationCompleted);
            }
            this.InvokeAsync("CancelUpload", new object[] {
                        fileId}, this.CancelUploadOperationCompleted, userState);
        }
        
        private void OnCancelUploadOperationCompleted(object arg) {
            if ((this.CancelUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateFileById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateFile GetUpdateFileById(System.Guid id) {
            object[] results = this.Invoke("GetUpdateFileById", new object[] {
                        id});
            return ((UpdateFile)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateFileByIdAsync(System.Guid id) {
            this.GetUpdateFileByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUpdateFileByIdAsync(System.Guid id, object userState) {
            if ((this.GetUpdateFileByIdOperationCompleted == null)) {
                this.GetUpdateFileByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateFileByIdOperationCompleted);
            }
            this.InvokeAsync("GetUpdateFileById", new object[] {
                        id}, this.GetUpdateFileByIdOperationCompleted, userState);
        }
        
        private void OnGetUpdateFileByIdOperationCompleted(object arg) {
            if ((this.GetUpdateFileByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateFileByIdCompleted(this, new GetUpdateFileByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilesForUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateFile[] GetFilesForUpdate(System.Guid id) {
            object[] results = this.Invoke("GetFilesForUpdate", new object[] {
                        id});
            return ((UpdateFile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesForUpdateAsync(System.Guid id) {
            this.GetFilesForUpdateAsync(id, null);
        }
        
        /// <remarks/>
        public void GetFilesForUpdateAsync(System.Guid id, object userState) {
            if ((this.GetFilesForUpdateOperationCompleted == null)) {
                this.GetFilesForUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesForUpdateOperationCompleted);
            }
            this.InvokeAsync("GetFilesForUpdate", new object[] {
                        id}, this.GetFilesForUpdateOperationCompleted, userState);
        }
        
        private void OnGetFilesForUpdateOperationCompleted(object arg) {
            if ((this.GetFilesForUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesForUpdateCompleted(this, new GetFilesForUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum UpdateType {
        
        /// <remarks/>
        Message,
        
        /// <remarks/>
        Hotfix,
        
        /// <remarks/>
        Update,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Update {
        
        private System.Guid idField;
        
        private System.Guid updateSeriesIdField;
        
        private System.Guid[] updateFileIdsField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string messageField;
        
        private string payloadPathField;
        
        private string installPathField;
        
        private UpdateType updateTypeField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateModifiedField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UpdateSeriesId {
            get {
                return this.updateSeriesIdField;
            }
            set {
                this.updateSeriesIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] UpdateFileIds {
            get {
                return this.updateFileIdsField;
            }
            set {
                this.updateFileIdsField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string PayloadPath {
            get {
                return this.payloadPathField;
            }
            set {
                this.payloadPathField = value;
            }
        }
        
        /// <remarks/>
        public string InstallPath {
            get {
                return this.installPathField;
            }
            set {
                this.installPathField = value;
            }
        }
        
        /// <remarks/>
        public UpdateType UpdateType {
            get {
                return this.updateTypeField;
            }
            set {
                this.updateTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateFile {
        
        private System.Guid idField;
        
        private System.Guid updateIdField;
        
        private byte[] fileField;
        
        private string fileNameField;
        
        private string installPathField;
        
        private bool isCompleteField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateModifiedField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UpdateId {
            get {
                return this.updateIdField;
            }
            set {
                this.updateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string InstallPath {
            get {
                return this.installPathField;
            }
            set {
                this.installPathField = value;
            }
        }
        
        /// <remarks/>
        public bool IsComplete {
            get {
                return this.isCompleteField;
            }
            set {
                this.isCompleteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Version {
        
        private System.Guid idField;
        
        private string versionNameField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string VersionName {
            get {
                return this.versionNameField;
            }
            set {
                this.versionNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateSeries {
        
        private System.Guid idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateModifiedField;
        
        private Update[] updatesField;
        
        private System.Guid[] versionsField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public Update[] Updates {
            get {
                return this.updatesField;
            }
            set {
                this.updatesField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] Versions {
            get {
                return this.versionsField;
            }
            set {
                this.versionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdateTypesCompletedEventHandler(object sender, GetUpdateTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveUpdateCompletedEventHandler(object sender, SaveUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Update Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Update)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdateByIdCompletedEventHandler(object sender, GetUpdateByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Update Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Update)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllUpdatesCompletedEventHandler(object sender, GetAllUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Update[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Update[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdatesBySeriesIdCompletedEventHandler(object sender, GetUpdatesBySeriesIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatesBySeriesIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatesBySeriesIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Update[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Update[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CompleteUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckForUpdatesCompletedEventHandler(object sender, CheckForUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckForUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckForUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdateCompletedEventHandler(object sender, GetUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Update Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Update)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdateSeriesCompletedEventHandler(object sender, GetUpdateSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateSeries Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateSeries)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUpdateByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InstallUpdatesInSeriesByIdsCompletedEventHandler(object sender, InstallUpdatesInSeriesByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallUpdatesInSeriesByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallUpdatesInSeriesByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HotfixUpdatesInSeriesByIdsCompletedEventHandler(object sender, HotfixUpdatesInSeriesByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HotfixUpdatesInSeriesByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HotfixUpdatesInSeriesByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMessageUpdatesInSeriesByIdCompletedEventHandler(object sender, GetAllMessageUpdatesInSeriesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessageUpdatesInSeriesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessageUpdatesInSeriesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Update[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Update[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllHotfixUpdatesInSeriesByIdCompletedEventHandler(object sender, GetAllHotfixUpdatesInSeriesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllHotfixUpdatesInSeriesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllHotfixUpdatesInSeriesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Update[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Update[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllUpdateSeriesCompletedEventHandler(object sender, GetAllUpdateSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUpdateSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUpdateSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateSeries[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateSeries[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdateSeriesByIdCompletedEventHandler(object sender, GetUpdateSeriesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateSeriesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateSeriesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateSeries Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateSeries)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveUpdateSeriesWithUpdateIdsCompletedEventHandler(object sender, SaveUpdateSeriesWithUpdateIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUpdateSeriesWithUpdateIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUpdateSeriesWithUpdateIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateSeries Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateSeries)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUpdateSeriesByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveUpdateSeriesCompletedEventHandler(object sender, SaveUpdateSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUpdateSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUpdateSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateSeries Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateSeries)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllVersionsForUpdateSeriesCompletedEventHandler(object sender, GetAllVersionsForUpdateSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVersionsForUpdateSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVersionsForUpdateSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Version[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Version[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllVersionsCompletedEventHandler(object sender, GetAllVersionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Version[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Version[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveVersionCompletedEventHandler(object sender, SaveVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteVersionByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartDownloadCompletedEventHandler(object sender, StartDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DownloadCompletedEventHandler(object sender, DownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartUploadCompletedEventHandler(object sender, StartUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AppendUploadCompletedEventHandler(object sender, AppendUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppendUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppendUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FinishUploadCompletedEventHandler(object sender, FinishUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteAllUploadsByUpdateIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelAllUploadsByUpdateIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelUploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdateFileByIdCompletedEventHandler(object sender, GetUpdateFileByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateFileByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateFileByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateFile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateFile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFilesForUpdateCompletedEventHandler(object sender, GetFilesForUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesForUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesForUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateFile[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591